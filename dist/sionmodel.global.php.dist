<?php
return [
	'sion_model' => [
		/**
		 * Database table name of where to store change records
		 */
		'changes_table' => 'project_changes',
		/**
		 * Database table name of where to store visit records
		 */
        'visits_table' => 'project_visits',
		/**
		 * This is the service name of a SionTable instance to call the getChanges() method
		 */ 
		'visits_model' => 'Project\Model\ProjectTable',
		
//        'post_place_line_format' => ':zip :cityState',
//        'post_place_line_format_by_country' => [
//            'US' => ':cityState :zip',
//            'CL' => ':cityState :zip',
//        ],
		
	    'default_redirect_route' => 'home',
	    
		/**
		* If this key is set, it will be used to prime the SionForm with persons for suggestions.
		* The class must implement the SionModel\Person\PersonProviderInterface
		*/
		'person_provider' => 'Project\Model\EventTable',
		'entities' => [
			/**
			 * For more information on entity config:
			 * @see \SionModel\Entity\Entity
			 */
            'event' => [
                'name'									=> 'event',
                'table_name' 							=> 'event',
                'table_key' 							=> 'event_id',
                'entity_key_field'               		=> 'eventId',
                'sion_model_class'               		=> 'Project\Model\EventTable',
                'get_object_function' 					=> 'getEvent',
                'get_objects_function'               	=> 'getEvents',
                'required_columns_for_creation' 		=> [
        	        'title'
        	    ],
                'name_field'               				=> 'title',
                'name_field_is_translateable'           => false,
                'country_field'               			=> 'country',
                'text_columns'               			=> [],
                'many_to_one_update_columns'     		=> [
                	'email'	=> 'contactInfo',
                	'cell'	=> 'contactInfo',
                ],
                'report_changes'               			=> true,
                'index_route'               			=> 'events',
                'index_template'               			=> 'project/events/index',
                'show_action_template'               	=> 'project/events/show',
                'show_route' 							=> 'events/event',
                'show_route_key' 						=> 'event_id',
                'show_route_key_field' 					=> 'eventId',
                'edit_action_form'               		=> 'Project\Form\EditEventForm',
                'edit_action_template'               	=> 'project/events/edit',
                'edit_route'               				=> 'events/event/edit',
                'edit_route_key'               			=> 'event_id',
                'edit_route_key_field'           		=> 'eventId',
                'create_action_form'              		=> 'Project\Form\CreateEventForm',
                'create_action_valid_data_handler'		=> 'createEvent',
                'create_action_redirect_route'         	=> 'events/event',
                'create_action_redirect_route_key'    	=> 'event_id',
                'create_action_redirect_route_key_field'=> 'eventId',
                'create_action_template'           		=> 'project/events/create',
                'touch_default_field'               	=> 'eventId',
                'touch_field_route_key'           		=> 'event_id',
                'touch_json_route'               		=> 'events/event/touch',
                'touch_json_route_key'            		=> 'event_id',
                'database_bound_data_preprocessor' 		=> 'preprocessEvent',
                'database_bound_data_postprocessor' 	=> 'postprocessEvent',
                'moderate_route' 						=> 'events/event/moderate',
                'moderate_route_entity_key' 			=> 'event_id',
                'has_dedicated_suggest_form' 			=> false,
                'suggest_form'               			=> 'Project\Form\SuggestEventForm',
                'enable_delete_action' 					=> true,
                'delete_action_acl_resource' 			=> 'event_:id',
                'delete_action_acl_permission' 			=> 'delete_event',
                'delete_action_redirect_route' 			=> 'events',
                'update_columns' 						=> [
                    'eventId' => 'event_id',
                    'file' => 'event_file',
                    'fileDateModified' => 'event_file_date_modified',
                    'duration' => 'event_duration',
                    'accuracy' => 'event_accuracy',
                    'source' => 'event_source',
                    'startDate' => 'event_start_date',
                    'endDate' => 'event_end_date',
                    'textQuality' => 'event_text_quality',
                    'adminKeywords' => 'event_admin_keywords',
                    'createdOn' => 'event_create_datetime',
                    'updatedOn' => 'event_update_datetime'
        	    ],
            ],
		],
	],
];

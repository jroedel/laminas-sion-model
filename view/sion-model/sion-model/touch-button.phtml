<?php
use SionModel\Form\TouchForm;
/**
 * @param TouchForm $form
 * @param string $url
 * @param bool $outputModal = false
 * @param string $buttonText = 'Confirm'
 * @param string $class, text to be added to the class html attribute of the button
 */
?>
<button type="button" name="touch" class="<?php //@todo add an id to the name
    if (isset($this->class)){
        echo $this->escapeHtmlAttr($this->class);
    } else {
        echo 'btn-default btn';
    }
?>" data-toggle="modal" data-target="#touchModal" value="<?php //@todo add data-touch-url
echo $this->translate("Confirm");?>"><?php //@todo factor in buttonText
echo $this->translate("Confirm");?></button>
<?php if ($this->outputModal):?>
<!-- Modal -->
<div class="modal fade bs-example-modal-md" id="touchModal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
<div class="modal-dialog modal-md">
<div class="modal-content">
<div class="modal-header">
<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
<h4 class="modal-title"><?php echo $this->translate('Thanks for your help.');?>...</h4>
      </div>
      <div class="modal-body">
        <?php //@todo add text to modal
        $form = $this->form;
    	$form->prepare();
		echo $this->form()->openTag($form);
		echo $this->formRow($form->get('security'));
		echo $this->formSubmit($form->get('submit'));
		echo '&nbsp;';
		echo $this->formButton($form->get('cancel'));
		echo $this->form()->closeTag();
		$url = $this->url;
        $this->inlineScript()->captureStart(); //@todo make submit url dynamic depending on which button was pressed
        echo <<<JS
$(function () {
  $("#touch_entity").submit(function(event ) {
     event.preventDefault();
     console.log(event);
     var requestData = $('#touch_entity').serializeArray().reduce(function(obj, item) {
      obj[item.name] = item.value;
      return obj;
    }, {});
    console.log(requestData);
    $.ajax({
        method: "post",
	    "url": "$url",
	    contentType: "application/json; charset=utf-8",
	    // The name of the callback parameter
	    jsonp: "callback",
	    // Tell jQuery we're expecting JSONP
	    dataType: "jsonp",
	    data: requestData
	})
	.success(function( data ) {
		console.log("Message from server:"+JSON.stringify(data));
        $(".modal-body").html("<p>"+data['message']+"</p>");
	})
	.fail(function(data) {
		console.log("There was a problem: "+JSON.stringify(data));
        $(".modal-body").html("<p class=\"text-danger\">"+data['responseJSON']['message']+"</p>");
	});
    $(this).button('loading');
  });
});
JS;
        $this->inlineScript()->captureEnd();
        ?>
      </div>
    </div>
  </div>
</div>
<?php endif;?>